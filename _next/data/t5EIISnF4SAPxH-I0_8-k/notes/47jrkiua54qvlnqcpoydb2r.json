{"pageProps":{"note":{"id":"47jrkiua54qvlnqcpoydb2r","title":"Logic Programming","desc":"","updated":1699599169047,"created":1699597373149,"custom":{},"fname":"engineering.sicp.logic-programming","type":"note","vault":{"fsPath":"vault"},"contentHash":"595d901c04e4423598c2dd88177d0bd3","links":[{"type":"wiki","from":{"fname":"engineering.sicp.logic-programming","id":"47jrkiua54qvlnqcpoydb2r","vaultName":"vault"},"value":"engineering.sicp.is-logic-programming-mathematical-logic","position":{"start":{"line":39,"column":7,"offset":1261},"end":{"line":39,"column":67,"offset":1321},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.sicp.is-logic-programming-mathematical-logic"}}],"anchors":{"pattern-matching":{"type":"header","text":"Pattern matching","value":"pattern-matching","line":10,"column":0,"depth":2},"streams-of-frames":{"type":"header","text":"Streams of frames","value":"streams-of-frames","line":18,"column":0,"depth":3},"unification":{"type":"header","text":"Unification","value":"unification","line":28,"column":0,"depth":2},"how-it-works":{"type":"header","text":"How it works","value":"how-it-works","line":36,"column":0,"depth":2}},"children":[],"parent":"jrkogrxi0kdyls9z103wexw","data":{}},"body":"<h1 id=\"logic-programming\">Logic Programming<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#logic-programming\"></a></h1>\n<p>The query system is based around two operations: pattern matching and unification.</p>\n<h2 id=\"pattern-matching\">Pattern matching<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pattern-matching\"></a></h2>\n<ul>\n<li>Test whether a datum matches a pattern</li>\n<li><code>((a b) c (a b))</code> matches <code>(?x c ?x)</code> with <code>?x</code> bound to <code>(a b)</code></li>\n<li>The pattern matcher takes as input: the datum, the pattern and a frame with any previous bindings.</li>\n<li>If match in a way consistent with the frame, it returns a new frame extended with new bindings.</li>\n<li>If no match, it says no match</li>\n</ul>\n<h3 id=\"streams-of-frames\">Streams of frames<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#streams-of-frames\"></a></h3>\n<p>Given a single frame, the matching process runs through the database entries one by one.\nFor each database entry, we get a result. The results for all the database entries\nare collected into a stream.</p>\n<p><img src=\"/assets/images/streams.png\"></p>\n<p><img src=\"/assets/images/and-stream.png\"></p>\n<h2 id=\"unification\">Unification<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#unification\"></a></h2>\n<p>Unification is the generalization of pattern matching. In this case, both\nthe pattern and the datum may have variables.</p>\n<p>For example, unify <code>(?x ?x)</code> and <code>((a ?y c) (a b ?z))</code>. To do this, we need\nto infer that <code>?y</code> is <code>b</code>, then <code>?x</code> is <code>(a b c)</code> and so <code>?z</code> is <code>c</code></p>\n<h2 id=\"how-it-works\">How it works<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-it-works\"></a></h2>\n<ol>\n<li>Unify the query with the conclusion of the rule to form an extension of the original frame</li>\n<li>Relative to this extended frame, evaluate the query formed by the body of the rule</li>\n</ol>\n<p>Similar to eval-apply loop.</p>\n<hr>\n<p>Next: <a href=\"/notes/5wws4a4c36v3xpzvrglru3a\">Is Logic Programming Mathematical Logic?</a></p>","noteIndex":{"id":"root","title":"Notes","desc":"","updated":1676546314176,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"a63bc749050c89d4e92bc7f1ce268820","links":[{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"vault"},"value":"history.laphams_quarterly.democracy.campaign_finance","position":{"start":{"line":13,"column":3,"offset":455},"end":{"line":13,"column":59,"offset":511},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"history.laphams_quarterly.democracy.campaign_finance"}},{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"vault"},"value":"engineering.being_a_mentor","position":{"start":{"line":14,"column":3,"offset":514},"end":{"line":14,"column":33,"offset":544},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.being_a_mentor"}},{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"vault"},"value":"history.china.dynasties","position":{"start":{"line":15,"column":3,"offset":547},"end":{"line":15,"column":30,"offset":574},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"history.china.dynasties"}},{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"vault"},"value":"history.india.indira_gandhi","position":{"start":{"line":16,"column":3,"offset":577},"end":{"line":16,"column":34,"offset":608},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"history.india.indira_gandhi"}},{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"vault"},"value":"books","alias":"here","position":{"start":{"line":18,"column":35,"offset":644},"end":{"line":18,"column":49,"offset":658},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"books"}},{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"vault"},"value":"engineering.dendron","alias":"Dendron","position":{"start":{"line":20,"column":21,"offset":681},"end":{"line":20,"column":52,"offset":712},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.dendron"}}],"anchors":{},"children":["05zaQJMyCo5kYcUdfqHbU","3dca4f75-0a84-4596-8fd3-38f0adbef2b9","2fr0tv2ahut83b6g2w81mz0","596IGh04441uyLbbpkFT1","3j8u7RlelDYoffRQgMIYg","vwq8iGNrINwTnn2qz9cR1","J6qb2iUM2ZMqAYgQQELzQ","tbk0j8n293h69lwldtfsg3u","fSkjQcqYZTGdomGRSlszf","T4ea2dCnXXW7SbPu0BnwF","G9wFXoaipKfEf6FlKdHH0","qvk3fygz1m6ws2fji5retj1","8zcz6vwjqab27tqeygao1p7","7nAQ226q3pwfVvQ9KSV80","XLgWwAI1l8XFqJ55YDMXU","Y48aQXzL3qv0LWZAG5Kbz","njqts253mv1fp9o0jkcw1fe","ceddHaDRTozEjfGqQbeNi","9bn8iwfv72uv75ionw8ftql","9mktb5y6nj7k2ybk8skpluv","8hwssya27ueepgrhlpdrfjd","7gck2zgd0zwdmgk9qgpos18","f01xrwkzbb4fzmupyjke59w","lqzeenqabtz689u30ii9azs","m1jb1iraefzo1rm6etj0du4","7can3uzghi01mfsp134rspp","q7wfcfca8zpa4z1i311vbq5","qyxwih7t2evrubc8r1ei6cb","w7j8brta5l7nl4s9izbzqns","n71onqf9jip4rfm15wkhkcr","paatgicnci0cib43y2dq09m","tpt26m8fl897kze8lssgt00"],"parent":null,"data":{},"body":"\nHi! I'm Param! This is a place for my personal notes.\n\nMy website is https://param.codes, and I write more readable\nstuff on my substack: https://newsletter.param.codes.\n\nI've found that taking notes helps me remember things, and it's nice\nto look back on information that you processed years ago. I jot down random things, there's no real structure, but some of these\nnotes could eventually become blog posts.\n\nSome notes you might find interesting:\n\n- [[history.laphams_quarterly.democracy.campaign_finance]]\n- [[engineering.being_a_mentor]]\n- [[history.china.dynasties]]\n- [[history.india.indira_gandhi]]\n\nI also keep notes on books I read [[here|books]].\n\nThis is built using [[Dendron|engineering.dendron]] and hosted using\n[GitHub Pages](https://github.com/paramsingh/notes).\n\nGet in touch via [Twitter](https://twitter.com/iliekcomputers) or email me at `me [at] param [dot] codes`!\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.89.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"/param/notes","description":"param's notes"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.param.codes/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}